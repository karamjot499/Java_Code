import java.util.LinkedList;
import java.util.Queue;

public class Order {
    private String customerName;
    private String drinkType;
    private String size;

    public Order(String customerName, String drinkType, String size) {
        this.customerName = customerName;
        this.drinkType = drinkType;
        this.size = size;
    }

    public String getCustomerName() {
        return customerName;
    }

    public String getDrinkType() {
        return drinkType;
    }

    public String getSize() {
        return size;
    }
}

public class OrderQueue {
    private Queue<Order> queue;

    public OrderQueue() {
        queue = new LinkedList<>();
    }

    public void addOrder(Order order) {
        queue.add(order);
    }

    public Order removeOrder() {
        if (isEmpty()) {
            return null;
        }
        return queue.poll();
    }

    public Order peekOrder() {
        if (isEmpty()) {
            return null;
        }
        return queue.peek();
    }

    public boolean isEmpty() {
        return queue.isEmpty();
    }
}

public class Main {
    public static void main(String[] args) {
        // Create a queue of customer orders
        OrderQueue orderQueue = new OrderQueue();

        // Add orders to the queue
        Order order1 = new Order("John", "Cappuccino", "Medium");
        Order order2 = new Order("Emma", "Latte", "Large");
        Order order3 = new Order("Michael", "Espresso", "Small");

        orderQueue.addOrder(order1);
        orderQueue.addOrder(order2);
        orderQueue.addOrder(order3);

        // Print the next order without removing it
        Order nextOrder = orderQueue.peekOrder();
        if (nextOrder != null) {
            System.out.println("Next Order:");
            System.out.println("Customer Name: " + nextOrder.getCustomerName());
            System.out.println("Drink Type: " + nextOrder.getDrinkType());
            System.out.println("Size: " + nextOrder.getSize());
            System.out.println();
        }

        // Remove the next order
        Order removedOrder = orderQueue.removeOrder();
        if (removedOrder != null) {
            System.out.println("Removed Order:");
            System.out.println("Customer Name: " + removedOrder.getCustomerName());
            System.out.println("Drink Type: " + removedOrder.getDrinkType());
            System.out.println("Size: " + removedOrder.getSize());
            System.out.println();
        }

        // Check if the queue is empty
        System.out.println("Is queue empty? " + orderQueue.isEmpty());  // Output: false
    }
}
